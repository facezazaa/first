from sklearn.neighbors import KNeighborsRegressor
import streamlit as st
import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

st.title('‡∏Å‡∏≤‡∏£‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡∏î‡πâ‡∏ß‡∏¢‡πÄ‡∏ó‡∏Ñ‡∏ô‡∏¥‡∏Ñ K-Nearest Neighbor')

# -------------------------------
# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
# -------------------------------
dt = pd.read_csv("./data/Housing.csv")

st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡πÅ‡∏£‡∏Å 10 ‡πÅ‡∏ñ‡∏ß")
st.write(dt.head(10))
st.subheader("‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡πà‡∏ß‡∏ô‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ 10 ‡πÅ‡∏ñ‡∏ß")
st.write(dt.tail(10))

# -------------------------------
# ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
# -------------------------------
st.subheader("üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
st.write(dt.describe())

# -------------------------------
# ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÅ‡∏•‡∏∞‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü
# -------------------------------
st.subheader("üìå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏π‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
feature = st.selectbox("‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ü‡∏µ‡πÄ‡∏à‡∏≠‡∏£‡πå", dt.columns[1:])  # ‡∏¢‡∏Å‡πÄ‡∏ß‡πâ‡∏ô price

# Boxplot: feature vs price
st.write(f"### üéØ Boxplot: {feature} ‡πÄ‡∏ó‡∏µ‡∏¢‡∏ö‡∏Å‡∏±‡∏ö‡∏£‡∏≤‡∏Ñ‡∏≤")
fig, ax = plt.subplots()
sns.boxplot(data=dt, x=feature, y="price", ax=ax)
st.pyplot(fig)

# Pairplot
if st.checkbox("‡πÅ‡∏™‡∏î‡∏á Pairplot (‡πÉ‡∏ä‡πâ‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡πÄ‡∏•‡πá‡∏Å‡∏ô‡πâ‡∏≠‡∏¢)"):

    st.write("### üå∫ Pairplot: ‡∏Å‡∏≤‡∏£‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏Ç‡∏≠‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î")
    fig2 = sns.pairplot(dt, hue=None)  # ‡πÑ‡∏°‡πà‡∏°‡∏µ HeartDisease ‡πÅ‡∏•‡πâ‡∏ß
    st.pyplot(fig2)

# -------------------------------
# ‡πÅ‡∏ö‡∏ö‡∏ü‡∏≠‡∏£‡πå‡∏°‡∏õ‡πâ‡∏≠‡∏ô‡∏Ñ‡πà‡∏≤‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢
# -------------------------------
st.subheader("üîÆ ‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡πâ‡∏≤‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤")

A1 = st.number_input("‡∏û‡∏∑‡πâ‡∏ô‡∏ó‡∏µ‡πà (area)", value=1000)
A2 = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡∏≠‡∏ô (bedrooms)", value=2)
A3 = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏´‡πâ‡∏≠‡∏á‡∏ô‡πâ‡∏≥ (bathrooms)", value=1)
A4 = st.number_input("‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ä‡∏±‡πâ‡∏ô (stories)", value=1)
A5 = st.selectbox("‡∏ï‡∏¥‡∏î‡∏ñ‡∏ô‡∏ô‡πÉ‡∏´‡∏ç‡πà (mainroad)", ["yes", "no"])
A6 = st.selectbox("‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÅ‡∏Ç‡∏Å (guestroom)", ["yes", "no"])
A7 = st.selectbox("‡∏°‡∏µ‡∏´‡πâ‡∏≠‡∏á‡πÉ‡∏ï‡πâ‡∏î‡∏¥‡∏ô (basement)", ["yes", "no"])
A8 = st.selectbox("‡∏°‡∏µ‡∏£‡∏∞‡∏ö‡∏ö‡∏ô‡πâ‡∏≥‡∏£‡πâ‡∏≠‡∏ô (hotwaterheating)", ["yes", "no"])
A9 = st.selectbox("‡∏°‡∏µ‡πÅ‡∏≠‡∏£‡πå (airconditioning)", ["yes", "no"])
A10 = st.number_input("‡∏ó‡∏µ‡πà‡∏à‡∏≠‡∏î‡∏£‡∏ñ (parking)", value=1)
A11 = st.selectbox("‡πÉ‡∏Å‡∏•‡πâ‡∏™‡∏ñ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç (prefarea)", ["yes", "no"])
A12 = st.selectbox("‡∏Å‡∏≤‡∏£‡∏ï‡∏Å‡πÅ‡∏ï‡πà‡∏á (furnishingstatus)", ["furnished", "semi-furnished", "unfurnished"])

# -------------------------------
# ‡∏õ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏π‡∏õ numeric
# -------------------------------
def preprocess(df):
    df2 = df.copy()
    for col in ["mainroad", "guestroom", "basement", "hotwaterheating", "airconditioning", "prefarea"]:
        df2[col] = df2[col].map({"yes": 1, "no": 0})
    df2 = pd.get_dummies(df2, columns=["furnishingstatus"], drop_first=True)
    return df2

dt_proc = preprocess(dt)

X = dt_proc.drop("price", axis=1)
y = dt_proc["price"]

# -------------------------------
# Train Model
# -------------------------------
model = KNeighborsRegressor(n_neighbors=3)
model.fit(X, y)

# -------------------------------
# ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏ú‡∏•
# -------------------------------
if st.button("‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤"):
    # ‡πÄ‡∏≠‡∏≤‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å input ‡∏°‡∏≤‡πÉ‡∏™‡πà DataFrame 1 ‡πÅ‡∏ñ‡∏ß
    input_dict = {
        "area": [A1],
        "bedrooms": [A2],
        "bathrooms": [A3],
        "stories": [A4],
        "mainroad": [A5],
        "guestroom": [A6],
        "basement": [A7],
        "hotwaterheating": [A8],
        "airconditioning": [A9],
        "parking": [A10],
        "prefarea": [A11],
        "furnishingstatus": [A12]
    }
    x_input = pd.DataFrame(input_dict)

    # ‡πÉ‡∏ä‡πâ preprocess() ‡πÅ‡∏ö‡∏ö‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏Å‡∏±‡∏ö‡∏ï‡∏≠‡∏ô train
    x_input_proc = preprocess(x_input)

    # ‡∏ó‡∏≥‡πÉ‡∏´‡πâ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ï‡∏£‡∏á‡∏Å‡∏±‡∏ö X
    x_input_proc = x_input_proc.reindex(columns=X.columns, fill_value=0)

    # ‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤
    prediction = model.predict(x_input_proc)[0]
    st.success(f"üè° ‡∏£‡∏≤‡∏Ñ‡∏≤‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏≤‡∏î‡∏Å‡∏≤‡∏£‡∏ì‡πå: {prediction:,.2f} ‡∏ö‡∏≤‡∏ó")


else:
    st.write("‡∏Å‡∏£‡∏≠‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡πâ‡∏ß‡∏Å‡∏î‡∏õ‡∏∏‡πà‡∏°‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ó‡∏≥‡∏ô‡∏≤‡∏¢‡∏£‡∏≤‡∏Ñ‡∏≤")
